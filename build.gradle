buildscript {
    ext {
        springBootVersion = '1.3.5.RELEASE'
    }
    repositories {
         mavenLocal()
         maven{
              url 'http://maven.yimei180.com/content/groups/public'
         }
         mavenCentral()
    }
     dependencies {
            classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
            classpath "com.github.marceloemanoel:gradle-migrations:0.2.1"
        }
}

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot'

sourceCompatibility = 1.8
targetCompatibility = 1.8

idea {
    module {
        inheritOutputDirs = false
        outputDir = file("$buildDir/classes/main/")
    }
}

configurations {
    mybatisGenerator
}

bootRepackage {
    mainClass = 'com.zrjt.pay.Application'
}

jar {
    baseName = 'com-yimei-cron-1.0.0-SNAPSHOT'
}

repositories {
    mavenLocal()
    maven {
        url 'http://maven.yimei180.com/content/groups/public'
    }
    mavenCentral()
}

dependencies {

    compile("com.github.pagehelper:pagehelper:4.1.1")
    compile('org.springframework.boot:spring-boot-starter-web')
    compile ('org.springframework.boot:spring-boot-starter-thymeleaf')
    compile('com.zaxxer:HikariCP:2.4.1')
    compile("org.mybatis:mybatis:3.3.0")
    compile("org.mybatis:mybatis-spring:1.2.2")
    compile("org.springframework:spring-jdbc:4.0.0.RELEASE")
    compile("com.googlecode.log4jdbc:log4jdbc:1.2")
    compile('mysql:mysql-connector-java:5.1.33')
    compile('ma.glasnost.orika:orika-core:1.4.6')


    compile("org.apache.httpcomponents:httpcomponents-client:4.3.6")
    compile('org.thymeleaf.extras:thymeleaf-extras-java8time:2.1.0.RELEASE')

    //发送消息依赖
    compile ('com.yimei:cloudservice-queue-api:1.0.0-SNAPSHOT')
    compile ('com.yimei:cloudservice-queue-aliyun:1.0.0-SNAPSHOT')
    compile ('com.yimei:cloudservice-queue-file:1.0.0-SNAPSHOT')
    compile ('com.yimei:cloudservice-queue-redis:1.0.0-SNAPSHOT')
    compile ('com.yimei:cloudservice-mailer-api:1.0.0-SNAPSHOT')

    compile("javax.mail:javax.mail-api:1.5.2")

    compile ('commons-io:commons-io:2.5')
    compile ('commons-codec:commons-codec:1.10')
    compile('org.apache.commons:commons-lang3:3.4')

    compile "org.flywaydb:flyway-core"

    compile('org.quartz-scheduler:quartz:2.2.1')
    compile('org.quartz-scheduler:quartz-jobs:2.2.1')

    mybatisGenerator 'org.mybatis.generator:mybatis-generator-core:1.3.2'
    mybatisGenerator 'mysql:mysql-connector-java:5.1.34'

    testCompile group: 'junit', name: 'junit', version: '4.11'
}
eclipse {
    classpath {
        containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
        containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7'
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.2.1'
}

task fatJar(type: Jar) {
    baseName = project.name + '-all'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

task mg << {
    ext.destDir = new File(buildDir, 'mybatisGenerate')
    destDir.mkdirs()
    ant.properties['targetProject'] = destDir.path
    ant.taskdef (
            name: 'mbgenerator',
            classname: 'org.mybatis.generator.ant.GeneratorAntTask',
            classpath: configurations.mybatisGenerator.asPath
    )
    ant.mbgenerator (overwrite: true,
            configfile: 'src/main/resources/generatorConfig.xml',verbose: true){
        propertyset {
            propertyref(name: 'targetProject')
        }
    }
}
